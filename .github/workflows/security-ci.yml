name: Security CI (SAST + SCA + DAST)

on:
  push:
    branches: [ "main", "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:

  sast:
    name: SAST (Semgrep)
    runs-on: ubuntu-latest
    permissions: { contents: read, security-events: write }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.x" }
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          python -m pip install "semgrep==1.36.0"
      - name: Run Semgrep and generate SARIF
        run: |
          semgrep --config p/ci --sarif -o semgrep.sarif --timeout 0 || true
          test -s semgrep.sarif || (echo "semgrep.sarif não gerado" && exit 2)
      - name: Upload SARIF to Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: semgrep

      - name: Gate (temporário):registrar High/Critical sem falhar
        run: |
            if grep -qi '"level":[[:space:]]*"error"' semgrep.sarif; then
              echo "::warning::SAST encontrou issues de alto risco (registro para evidência)."
              # exit 1
            fi


  sca:
    name: SCA (OWASP Dependency-Check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "ChallengeXP"
          path: "."
          format: "ALL"
          out: "reports"
      - name: Publicar relatórios SCA
        uses: actions/upload-artifact@v4
        with:
          name: sca-reports
          path: reports/
      - name: Falhar se houver High/Critical
        run: |
          COUNT=$(xmlstarlet sel -t -v "count(/analysis/dependencies/dependency/vulnerabilities/vulnerability[severity='High' or severity='Critical'])" reports/dependency-check-report.xml || echo 0)
          echo "Vulns High/Critical: $COUNT"
          if [ "$COUNT" != "0" ] && [ "$COUNT" != "" ]; then
            echo "::error::SCA encontrou vulnerabilidades High/Critical."
            exit 1
          fi

  dast:
    name: DAST (OWASP ZAP contra localhost)
    runs-on: ubuntu-latest
    needs: [sca]   
    steps:
      - uses: actions/checkout@v4
      - uses: acti
